ylab("Modal Ct value") +
xlab("Days since infection")
## Note that this model does not solve for t=0,
## as it is always assumed that no one is detectable 0 days post infection
prop_detect <- prop_detectable(test_ages,pars, cts)
p_ct_model_detectable <- ggplot(data.frame(p=c(0,prop_detect),t=c(0,test_ages))) +
geom_line(aes(x=t,y=p)) +
theme_bw() +
ylab("Proportion of infections\n still detectable") +
xlab("Days since infection")
p_ct_model/p_ct_model_detectable
sim_cts <- simulate_viral_loads_example(test_ages, pars,N=200)
print(head(sim_cts))
p_sim_cts_age <- ggplot(sim_cts %>% filter(ct < 40)) +
geom_point(aes(x=age,y=ct),alpha=0.25) +
scale_y_continuous(trans="reverse",limits=c(40,10)) +
theme_bw() +
ylab("Ct value") +
xlab("Days since infection") +
ggtitle("Simulated detectable Ct values on each day post infection")
p_sim_cts_age
data(example_gp_partab)
head(example_gp_partab)
## Illustration -- set the `viral_peak` parameter to be estimated during the procedure, and the `intercept` parameter to be fixed
example_gp_partab <- example_gp_partab %>% filter(names == "viral_peak") %>% mutate(fixed=0)
example_gp_partab <- example_gp_partab %>% filter(names == "intercept") %>% mutate(fixed=1)
## Read in the SEIR model parameter control table
data(example_seir_partab)
## Pull out the current values for each parameter, and set these as the prior means
means <- example_seir_partab$values
names(means) <- example_seir_partab$names
## Set standard deviations of prior distribution
sds_seir <- c("obs_sd"=0.5,"viral_peak"=2,
"wane_rate2"=1,"t_switch"=3,"level_switch"=1,
"prob_detect"=0.03,
"incubation"=0.25, "infectious"=0.5)
## Define a function that returns the log prior probability for a given vector of parameter
## values in `pars`, given the prior means and standard deviations set above.
prior_func_seir <- function(pars,...){
## Ct model priors
obs_sd_prior <- dnorm(pars["obs_sd"], means[which(names(means) == "obs_sd")], sds_seir["obs_sd"],log=TRUE)
viral_peak_prior <- dnorm(pars["viral_peak"], means[which(names(means) == "viral_peak")], sds_seir["viral_peak"],log=TRUE)
wane_2_prior <- dnorm(pars["wane_rate2"],means[which(names(means) == "wane_rate2")],sds_seir["wane_rate2"],log=TRUE)
tswitch_prior <- dnorm(pars["t_switch"],means[which(names(means) == "t_switch")],sds_seir["t_switch"],log=TRUE)
level_prior <- dnorm(pars["level_switch"],means[which(names(means) == "level_switch")],sds_seir["level_switch"],log=TRUE)
## Beta prior on the prob_detect parameter to ensure between 0 and 1
beta1_mean <- means[which(names(means) == "prob_detect")]
beta1_sd <- sds_seir["prob_detect"]
beta_alpha <- ((1-beta1_mean)/beta1_sd^2 - 1/beta1_mean)*beta1_mean^2
beta_beta <- beta_alpha*(1/beta1_mean - 1)
beta_prior <- dbeta(pars["prob_detect"],beta_alpha,beta_beta,log=TRUE)
## SEIR model priors
incu_prior <- dlnorm(pars["incubation"],log(means[which(names(means) == "incubation")]), sds_seir["incubation"], TRUE)
infectious_prior <- dlnorm(pars["infectious"],log(means[which(names(means) == "infectious")]),sds_seir["infectious"],TRUE)
## Sum up
obs_sd_prior + viral_peak_prior +
wane_2_prior + tswitch_prior + level_prior + beta_prior +
incu_prior + infectious_prior
}
## Point to a function that expects a vector of named parameters and returns a vector of daily infection probabilities/incidence
incidence_function <- solveSEIRModel_lsoda_wrapper
## Use the example parameter table
data(example_seir_partab)
## Create the posterior function used in the MCMC framework
posterior_func <- create_posterior_func(parTab=example_seir_partab,
data=example_ct_data,
PRIOR_FUNC=prior_func_seir,
INCIDENCE_FUNC=incidence_function,
use_pos=FALSE) ## Important argument, see text
## Test with default parameters to find the log likelihood
posterior_func(example_seir_partab$values)
dgumbel_jh
?create
devtools::install_github("jameshay218/antibodyKinetics")
paramViewer()
runApp()
getwd()
library(antibodyKinetics)
paramViewer()
install.packages("shinyBS")
paramViewer()
install.packages("rhandsontable")
paramViewer()
version()
R.version
setwd("~/Documents/GitHub/driftSim/")
Rcpp::compileAttributes()
devtools::load_all(recompile = TRUE)
Rcpp::compileAttributes()
devtools::load_all(recompile = TRUE)
plot(seq(0,35,by=0.1),solve_viral_kinetics(seq(0,35,by=0.1),2,5,5,12,10))
plot(seq(0,35,by=0.1),solve_infectiousness(seq(0,35,by=0.1),2,5,5,12,10))
setwd("~/Documents/GitHub/driftSim/")
Rcpp::compileAttributes()
devtools::load_all(recompile = TRUE)
plot(seq(0,35,by=0.1),solve_viral_kinetics(seq(0,35,by=0.1),2,5,5,12,10))
plot(seq(0,35,by=0.1),solve_infectiousness(seq(0,35,by=0.1),2,5,5,12,10))
plot(seq(0,35,by=0.1),solve_infectiousness(seq(0,35,by=0.1),2,5,5,12,10,0.2,0.75,5))
plot(seq(0,35,by=0.1),solve_viral_kinetics(seq(0,35,by=0.1),2,5,5,12,10))
plot(seq(0,35,by=0.1),solve_infectiousness(seq(0,35,by=0.1),2,5,5,12,10,0.2,0.75,5))
plot(seq(0,35,by=0.1),solve_infectiousness(seq(0,35,by=0.1),2,5,5,12,10,0.1,0.75,5))
plot(seq(0,35,by=0.1),solve_infectiousness(seq(0,35,by=0.1),2,5,5,12,10,0.1,0.75,10))
plot(seq(0,35,by=0.1),solve_infectiousness(seq(0,35,by=0.1),2,5,5,12,10,0.1,0.75,3))
plot(seq(0,35,by=0.1),solve_infectiousness(seq(0,35,by=0.1),2,5,5,12,10,0.1,0.75,10))
plot(seq(0,35,by=0.1),solve_infectiousness(seq(0,35,by=0.1),2,5,5,12,10,0.1,0.5,10))
plot(seq(0,35,by=0.1),solve_infectiousness(seq(0,35,by=0.1),2,5,5,12,10,0.2,0.5,10))
plot(seq(0,35,by=0.1),solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,0.5,10))
plot(seq(0,35,by=0.01),solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,0.5,10))
plot(seq(0,35,by=0.01),solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,0.5,5))
plot(seq(0,35,by=0.01),solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,0.5,3))
plot(seq(0,35,by=0.01),solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,0.5,5))
plot(seq(0,35,by=0.01),solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,0.5,7))
plot(seq(0,35,by=0.01),solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,0.3,7))
plot(seq(0,35,by=0.01),solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,1,7))
plot(seq(0,35,by=0.1),solve_viral_kinetics(seq(0,35,by=0.1),0,5,5,12,10))
plot(seq(0,35,by=0.01),solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,1,7))
plot(seq(0,35,by=0.01),solve_infectiousness(seq(0,35,by=0.01),0,5,5,12,10,0.2,1,7))
plot(seq(0,35,by=0.1),solve_viral_kinetics(seq(0,35,by=0.1),2,3,5,12,10))
plot(seq(0,35,by=0.01),solve_infectiousness(seq(0,35,by=0.01),2,3,5,12,10,0.2,1,7))
plot(seq(0,35,by=0.1),solve_viral_kinetics(seq(0,35,by=0.1),2,5,5,12,10))
plot(seq(0,35,by=0.01),solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,1,7))
plot(seq(0,35,by=0.01),solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,1,7),ylim=c(0,0.25))
plot(seq(0,35,by=0.01),2*solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,1,7),ylim=c(0,0.25))
plot(seq(0,35,by=0.01),2*solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,1,7))
sum(2*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.2,1,7))
sum(2*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.11,0.5,5))
sum(2*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.15,0.5,5))
plot(seq(0,35,by=0.01),2*solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,1,7))
sum(2*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.15,1,7))
sum(2*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.2,1,7))
sum(2*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.5,1,7))
sum(2*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.3,1,7))
sum(10*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.3,1,7))
sum(10*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.1,1,7))
sum(10*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.05,1,7))
sum(5*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.05,1,7))
sum(5*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.1,1,7))
sum(5*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.1,1,7))
sum(5*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.2,1,7))
sum(5*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.1,1,7))
sum(5*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.12,1,7))
sum(5*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.15,1,7))
sum(5*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.14,1,7))
sum(5*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.13,1,7))
sum(5*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.13,1,7))
flags <- c(1,1,1,1)
popN <- 100000
hostPopn <- c(popN,0,5, 1/(40*365),1/21)
n_variants <- 2
N <- 500000*n_variants
vlPars <- cbind(rep(2, N), rep(5,N),rep(5,N),rep(12,N),rnorm(N, 8, 2), rep(FALSE,N))
infectiousnessPars <- cbind(c(0.1,0.13),rep(1,n_variants),rep(7,n_variants))
crossImmunity <- matrix(c(1,0.75,0.75,1),nrow=n_variants)
seeds <- matrix(c(0,0,10,
100, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
seeds <- matrix(c(0,0,10,
75, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
seeds <- matrix(c(0,0,10,
90, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
hostPopn <- c(popN,0,5, 1/(40*365),1/7)
n_variants <- 2
N <- 500000*n_variants
vlPars <- cbind(rep(2, N), rep(5,N),rep(5,N),rep(12,N),rnorm(N, 8, 2), rep(FALSE,N))
infectiousnessPars <- cbind(c(0.1,0.13),rep(1,n_variants),rep(7,n_variants))
crossImmunity <- matrix(c(1,0.75,0.75,1),nrow=n_variants)
seeds <- matrix(c(0,0,10,
90, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
flags <- c(1,1,1,1)
popN <- 100000
hostPopn <- c(popN,0,5, 1/(40*365),1/21)
n_variants <- 2
N <- 500000*n_variants
vlPars <- cbind(rep(2, N), rep(5,N),rep(5,N),rep(12,N),rnorm(N, 8, 2), rep(FALSE,N))
infectiousnessPars <- cbind(c(0.1,0.13),rep(1,n_variants),rep(7,n_variants))
crossImmunity <- matrix(c(1,0.75,0.75,1),nrow=n_variants)
seeds <- matrix(c(0,0,10,
90, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
flags <- c(1,1,1,1)
popN <- 100000
hostPopn <- c(popN,0,5, 1/(40*365),1/21)
n_variants <- 2
N <- 500000*n_variants
vlPars <- cbind(rep(2, N), rep(5,N),rep(5,N),rep(12,N),rnorm(N, 8, 2), rep(FALSE,N))
infectiousnessPars <- cbind(c(0.1,0.13),rep(1,n_variants),rep(7,n_variants))
crossImmunity <- matrix(c(1,0.75,0.75,1),nrow=n_variants)
seeds <- matrix(c(0,0,10,
90, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
vlPars <- cbind(rep(2, N), rep(5,N),rep(5,N),rnorm(N,12,2),rnorm(N, 8, 2), rep(FALSE,N))
infectiousnessPars <- cbind(c(0.1,0.13),rep(1,n_variants),rep(7,n_variants))
crossImmunity <- matrix(c(1,0.75,0.75,1),nrow=n_variants)
seeds <- matrix(c(0,0,10,
90, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
plot(seq(0,35,by=0.01),solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,1,7))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,35,by=0.01),2,5,5,12,10,0.2,1,7))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),2,5,5,12,10,0.2,1,7))
plot(seq(0,35,by=0.1),solve_viral_kinetics(seq(0,35,by=0.1),0,5,5,12,10))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,5,5,12,10,0.2,1,7))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,4,5,12,10,0.2,1,7))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,4,5,12,10,0.2,1,5))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,4,5,12,10,0.2,2,5))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,4,5,12,10,0.2,1,5))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,4,5,12,10,0.2,0.5,5))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,4,5,12,10,0.2,0.5,10))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,4,5,12,10,0.2,0.5,7))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,4,5,12,10,0.2,0.5,8))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,4,5,12,10,0.2,0.5,5))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,4,5,12,10,0.2,0.5,3))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,4,5,12,10,0.2,1,3))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,4,5,12,10,0.2,1,10))
plot(seq(0,35,by=0.1),solve_viral_kinetics(seq(0,35,by=0.1),0,4,5,12,10))
plot(seq(0,35,by=0.1),solve_viral_kinetics(seq(0,35,by=0.1),0,3,5,12,10))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,3,5,12,10,0.2,1,10))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),2,3,5,12,10,0.2,1,10))
plot(seq(0,35,by=0.1),solve_viral_kinetics(seq(0,35,by=0.1),2,3,5,12,10))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),2,3,5,12,10,0.2,1,10))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,5,5,12,10,0.2,1,10))
plot(seq(0,35,by=0.1),solve_viral_kinetics(seq(0,35,by=0.1),0,5,5,12,10))
plot(seq(0,20,by=0.01),solve_infectiousness(seq(0,20,by=0.01),0,5,5,12,10,0.1,1,7))
plot(seq(0,20,by=1),solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.1,1,7))
sum(5*solve_infectiousness(seq(0,35,by=1),2,5,5,12,10,0.13,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.1,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.13,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.1,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.9,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.09,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.05,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.08,1,7))
plot(seq(0,20,by=1),solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.08,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.08,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.08,1,7))
flags <- c(1,1,1,1)
popN <- 100000
hostPopn <- c(popN,0,5, 1/(40*365),1/21)
n_variants <- 2
N <- 500000*n_variants
vlPars <- cbind(rep(2, N), rep(5,N),rep(5,N),rnorm(N,12,2),rnorm(N, 8, 2), rep(FALSE,N))
infectiousnessPars <- cbind(c(0.08,0.13),rep(1,n_variants),rep(7,n_variants))
crossImmunity <- matrix(c(1,0.75,0.75,1),nrow=n_variants)
seeds <- matrix(c(0,0,10,
90, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
seeds <- matrix(c(0,0,10,
100, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.11,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.12,1,7))
infectiousnessPars <- cbind(c(0.08,0.12),rep(1,n_variants),rep(7,n_variants))
crossImmunity <- matrix(c(1,0.75,0.75,1),nrow=n_variants)
seeds <- matrix(c(0,0,10,
100, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
seeds <- matrix(c(0,0,10,
150, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
seeds <- matrix(c(0,0,10,
150, 1, 0),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.12,1,7))
vlPars <- cbind(rep(2, N), rep(5,N),rep(5,N),rnorm(N,12,2),rnorm(N, 10, 1), rep(FALSE,N))
infectiousnessPars <- cbind(c(0.08,0.12),rep(1,n_variants),rep(7,n_variants))
crossImmunity <- matrix(c(1,0.75,0.75,1),nrow=n_variants)
seeds <- matrix(c(0,0,10,
150, 1, 0),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
vlPars <- cbind(rep(0, N), rep(5,N),rep(5,N),rnorm(N,12,2),rnorm(N, 10, 1), rep(FALSE,N))
infectiousnessPars <- cbind(c(0.08,0.12),rep(1,n_variants),rep(7,n_variants))
crossImmunity <- matrix(c(1,0.75,0.75,1),nrow=n_variants)
seeds <- matrix(c(0,0,10,
150, 1, 0),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
seeds <- matrix(c(0,0,10,
150, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
vlPars <- cbind(rep(0, N), rep(5,N),rep(5,N),rnorm(N,12,2),rnorm(N, 10, 1), rep(FALSE,N))
infectiousnessPars <- cbind(c(0.08,0.12),rep(1,n_variants),rep(7,n_variants))
crossImmunity <- matrix(c(1,0.75,0.75,1),nrow=n_variants)
seeds <- matrix(c(0,0,10,
70, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.12,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.08,1,7))
plot(seq(0,35,by=0.1),solve_viral_kinetics(seq(0,35,by=0.1),0,5,5,12,10))
plot(seq(0,20,by=1),solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.08,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.08,1,7))
flags <- c(1,1,1,1)
popN <- 100000
hostPopn <- c(popN,0,5, 1/(40*365),1/21)
n_variants <- 2
N <- 500000*n_variants
vlPars <- cbind(rep(0, N), rep(5,N),rep(5,N),rnorm(N,12,2),rnorm(N, 10, 1), rep(FALSE,N))
infectiousnessPars <- cbind(c(0.08,0.12),rep(1,n_variants),rep(7,n_variants))
crossImmunity <- matrix(c(1,0.75,0.75,1),nrow=n_variants)
seeds <- matrix(c(0,0,10,
50, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
plot(seq(0,20,by=1),solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.08,1,7))
plot(seq(0,20,by=1),solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.12,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.08,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.12,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.13,1,7))
sum(5*solve_infectiousness(seq(0,20,by=1),0,5,5,12,10,0.14,1,7))
flags <- c(1,1,1,1)
popN <- 100000
hostPopn <- c(popN,0,5, 1/(40*365),1/21)
n_variants <- 2
N <- 500000*n_variants
vlPars <- cbind(rep(0, N), rep(5,N),rep(5,N),rnorm(N,12,2),rnorm(N, 10, 1), rep(FALSE,N))
infectiousnessPars <- cbind(c(0.08,0.14),rep(1,n_variants),rep(7,n_variants))
crossImmunity <- matrix(c(1,0.75,0.75,1),nrow=n_variants)
seeds <- matrix(c(0,0,10,
50, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
flags <- c(1,1,1,1)
popN <- 100000
hostPopn <- c(popN,0,5, 1/(40*365),1/7)
n_variants <- 2
N <- 500000*n_variants
vlPars <- cbind(rep(0, N), rep(5,N),rep(5,N),rnorm(N,12,2),rnorm(N, 10, 1), rep(FALSE,N))
infectiousnessPars <- cbind(c(0.08,0.14),rep(1,n_variants),rep(7,n_variants))
crossImmunity <- matrix(c(1,0.75,0.75,1),nrow=n_variants)
seeds <- matrix(c(0,0,10,
50, 1, 10),nrow=2,byrow=TRUE)
run_simulation(flags, hostPopn,seeds,vlPars,infectiousnessPars,crossImmunity,0,500,VERBOSE=TRUE)
sir <- read.csv("SIR.csv",header=FALSE)
plot_SIR(sir)
colnames(sir) <- c("S","I","R","inc")
sir$t <- 1:nrow(sir)
ggplot(sir) + geom_line(aes(x=t,y=inc))
sum(sir[,4])/popN
hosts <- read.csv("hosts.csv")
library(tidyverse)
viruses <- read_csv("voutput.csv")
viruses %>% group_by(birth, variant) %>% tally() %>% ggplot() + geom_line(aes(x=birth,y=n,col=as.factor(variant)))
